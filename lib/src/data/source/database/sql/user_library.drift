import 'records.drift';
import 'hymns.drift';
import 'topics.drift';
import 'stakeholders.drift';

-- Tables
CREATE VIEW user_library AS
SELECT 
    *,
    CASE WHEN json_extract(data, '$.hymn_id') IS NOT NULL THEN CAST(json_extract(data, '$.hymn_id') AS TEXT) ELSE NULL END AS hymn_id,
    CASE WHEN json_extract(data, '$.playlist_id') IS NOT NULL THEN CAST(json_extract(data, '$.playlist_id') AS TEXT) ELSE NULL END AS playlist_id,
    CASE WHEN json_extract(data, '$.topic_id') IS NOT NULL THEN CAST(json_extract(data, '$.topic_id') AS TEXT) ELSE NULL END AS topic_id,
    CASE WHEN json_extract(data, '$.stakeholder_id') IS NOT NULL THEN CAST(json_extract(data, '$.stakeholder_id') AS TEXT) ELSE NULL END AS stakeholder_id
FROM user_records
WHERE collection_name = 'user_library';

CREATE VIEW user_playlist_library AS
SELECT *, CAST(json_extract(data, '$.playlist_id') AS TEXT) AS playlist_id
FROM user_records
WHERE collection_name = 'user_library'
AND json_extract(data, '$.playlist_id') IS NOT NULL;

-- Queries
getUserLibrary:
SELECT * FROM user_library
WHERE (user = :user OR uid = :user);

getUserLibraryMatch:
SELECT * FROM user_library
WHERE (user = :user OR uid = :user)
AND (
    hymn_id = :hymn_id
    AND playlist_id = :playlist_id
    AND topic_id = :topic_id
    AND stakeholder_id = :stakeholder_id
);

getUserLibraryById:
SELECT * FROM user_library
WHERE (user = :user OR uid = :user)
AND id = :id;

getUserHymnLibrary:
SELECT * FROM user_library
WHERE (user = :user OR uid = :user)
AND hymn_id IS NOT NULL AND hymn_id != '';

getUserStakeholderLibrary:
SELECT * FROM user_library
WHERE (user = :user OR uid = :user)
AND stakeholder_id IS NOT NULL AND stakeholder_id != '';

getUserTopicLibrary:
SELECT * FROM user_library
WHERE (user = :user OR uid = :user)
AND topic_id IS NOT NULL AND topic_id != '';

getUserPlaylistLibrary:
SELECT * FROM user_playlist_library
WHERE user = :user OR uid = :user;

getUserPlaylistLibraryById:
SELECT * FROM user_playlist_library
WHERE (user = :user OR uid = :user)
AND id = :id;

getUserPlaylistLibraryByPlaylistId:
SELECT * FROM user_playlist_library
WHERE (user = :user OR uid = :user)
AND playlist_id = :playlist_id;
