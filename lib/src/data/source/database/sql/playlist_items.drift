import 'records.drift';
import 'playlists.drift';
import 'converters.dart';

-- Tables
CREATE VIEW playlist_items AS
SELECT 
    *,
    CASE WHEN json_extract(data, '$.playlist_id') IS NOT NULL THEN CAST(json_extract(data, '$.playlist_id') AS TEXT) ELSE NULL END AS playlist_id,
    CASE WHEN json_extract(data, '$.hymn_id') IS NOT NULL THEN CAST(json_extract(data, '$.hymn_id') AS TEXT) ELSE NULL END AS hymn_id,
    CASE WHEN json_extract(data, '$.image') IS NOT NULL THEN CAST(json_extract(data, '$.image') AS TEXT) ELSE NULL END AS image,
    CASE WHEN json_extract(data, '$.color') IS NOT NULL THEN CAST(json_extract(data, '$.color') AS TEXT) ELSE NULL END AS color,
    CASE WHEN json_extract(data, '$.notes') IS NOT NULL THEN CAST(json_extract(data, '$.notes') AS TEXT) ELSE NULL END AS notes,
    CASE WHEN json_extract(data, '$.text') IS NOT NULL THEN CAST(json_extract(data, '$.text') AS TEXT) ELSE NULL END AS [text],
    CASE WHEN json_extract(data, '$.order') IS NOT NULL THEN CAST(json_extract(data, '$.order') AS REAL) ELSE NULL END AS [order],
    CASE WHEN json_extract(data, '$.parts') IS NOT NULL THEN CAST(group_concat(json_extract(data, '$.parts')) AS TEXT) ELSE '[]' END MAPPED BY `const JsonStringListConverter()` AS parts
FROM user_records
WHERE collection_name = 'playlist_items';

-- Queries
getItemsForPlaylist:
SELECT * FROM playlist_items
WHERE user = :user
AND playlist_id = :playlist_id;

getPlaylistItems:
SELECT * FROM playlist_items;

getPlaylistItem:
SELECT * FROM playlist_items
WHERE id = :id
AND playlist_id = :playlist_id;

getPlaylistItemsByUserAndPlaylistId:
SELECT * FROM playlist_items
WHERE user = :user
AND playlist_id = :playlist_id;
